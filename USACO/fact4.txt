/*
ID:crazywo1
PROG:fact4
LANG:C++
*/
//the easy code....
/*
 
Executing...
   Test 1: TEST OK [0.011 secs, 2792 KB]
   Test 2: TEST OK [0.000 secs, 2792 KB]
   Test 3: TEST OK [0.011 secs, 2792 KB]
   Test 4: TEST OK [0.011 secs, 2792 KB]
   Test 5: TEST OK [0.022 secs, 2792 KB]
   Test 6: TEST OK [0.000 secs, 2792 KB]
   Test 7: TEST OK [0.000 secs, 2792 KB]
   Test 8: TEST OK [0.022 secs, 2792 KB]
   Test 9: TEST OK [0.000 secs, 2792 KB]
   Test 10: TEST OK [0.000 secs, 2792 KB]
 
All tests OK.
 
*/
#include "stdio.h"
#include "stdlib.h"
int main(){
freopen("fact4.in","r",stdin);
freopen("fact4.out","w",stdout);
int n,i;
long long ans;
scanf("%d",&n);
ans=1;
for(i=1;i<=n;i++){
  ans*=i;
  ans%=1000000;
  while(ans%10==0)ans/=10;
};
printf("%lld\n",ans%10);
fclose(stdin);
fclose(stdout);
return 0;
};/*
ID:dingyag1
LANG:C++
TASK:fact4
*/
#include <stdio.h>
#include <iostream>
using namespace std;
 
 
int main()
{
	freopen("fact4.in","r",stdin);
	freopen("fact4.out","w",stdout);
	long n,i,t=1;
	cin>>n;
	for (i=1;i<=n;++i)
	{
		t*=i;
		while (t%10==0)
		{
			t/=10;
		}
		t=t%100000;
	}
	cout<<t%10<<endl;	
}/*
ID:ybojan2
LANG:C++
TASK:fact4
*/
 
#include <iostream>
#include <fstream>
 
using namespace std;
 
int main()
{
    ifstream fin("fact4.in");
    ofstream fout("fact4.out");
 
    int n,s2=0,s5=0,res=1;
    fin>>n;
    for (int i=2;i<=n;i++)
    {
        int tmp=i;
        while (tmp%2==0) 
        {
              s2++;
              tmp/=2;
        }
        while (tmp%5==0)
        {
              s5++;
              tmp/=5;
        }
        while ((s2>0)&&(s5>0))
        {
              s2--;
              s5--;
        }
        res*=tmp;
        res%=10;   
    }
    for (int i=1;i<=s2;i++)
    {
        res*=2;
        res%=10;
    }
    for (int i=1;i<=s5;i++)
    {
        res*=5;
        res%=10;
    }
    fout<<res<<endl;
    return 0;
}/*
ID: yinzhen1
LANG: C++
TASK: fact4
*/
 
#include <iostream>
using namespace std;
 
int main()
{
	freopen("fact4.in", "r", stdin);
	freopen("fact4.out", "w", stdout);
	int n;
	while (scanf("%d", &n) != -1)
	{
		int f1 = 1, f2, tmp;
		for(int i = 2; i <= n; ++i)
		{
			tmp = f1*i;
			while(tmp%10 == 0)
				tmp /= 10;
			f2 = tmp%10000;
			f1 = f2;
		}
		printf("%d\n", f1%10);
	}
	return 0;
}/*
ID:GeorgeG1
PROB:fact4
LANG:C++
*/
/*
末位0仅由10产生，10仅由2*5产生   --> 
 
预处理: 
        建立数组val[5000]
        初始化val[1...n]={1,2,3,...,n}
        对每个val中的数i执行下列操作：
         while (i%2==0){i/=2;counter++;}
        while (i%5==0){i/=5;counter--;}
DP:   
        last[i]表示val中前i个数相乘的末尾非0数字 
         Last(i)为取i的末尾数字 
         last[0]=1;
 
        last[i]=Last(last[i-1]*val[i]);
 
        for (long i=1;i<=counter;i++)
            last[n]=Last(last[n]*2);
 
        ans=last[n]; 
*/
 
#include <fstream>
#include <cstdlib>
 
using namespace std;
 
ifstream fin ("fact4.in");
ofstream fout ("fact4.out");
 
inline long Last(long num)
{
     return num%10;
}    
 
int main()
{
    //init
    long n;
    fin >>n;
    //预处理
     static long last[5000];
    static long val[5000];
    long counter=0;
    for (long i=1;i<=n;i++)
    {
        val[i]=i;
        while ((val[i]&1)==0){val[i]>>=1;counter++;}
        while (val[i]%5==0){val[i]/=5;counter--;}
    }
    //DP
    last[0]=1;
    for (long i=1;i<=n;i++)
        last[i]=Last(last[i-1]*val[i]);
 
    for (long i=1;i<=counter;i++)
        last[n]=Last(last[n]*2);
 
    fout <<last[n] <<endl;
    return 0;
}/*
ID: hearson1
PROB: fact4
LANG: C++
*/
#include <iostream>
#include <cstdlib>
#include <cstdio>
#include <cstring>
#include <cmath>
#include <cassert>
#include <algorithm>
#include <vector>
#include <set>
#include <utility>
#include <string>
#include <queue>
#include <map>
 
using namespace std;
typedef long long ll;
typedef unsigned long long ull;
typedef unsigned int uint;
typedef unsigned long ulong;
 
inline ull getTwo(ull n) {
  ull r = 0;
  while (n >>= 1) r += n;
  return r;
}
 
inline ull getFive(ull n) {
  ull r = 0;
  while (n /= 5) r += n;
  return r;
}
 
ull getN2(ull n, ull base) {
  ull r = 0;
  while (n) {
    r += (n/10) + ((n%10)>=base);
    n >>= 1;
  }
  return r;
}
 
ull getN(ull n, ull base) {
  if (!n) return 0;
  ull r = (n/10) + ((n%10)>=base);
  r += getN2(n>>1, base) + getN(n/5, base);
 
  return r;
}
 
int ra[] = {6, 2, 4, 8};
int rb[] = {1, 3, 9, 7};
int rc[] = {1, 7, 9, 3};
int rd[] = {1, 9, 1, 9};
 
int main() {
  ull N;
  ull a, b, c, d, r;
 
  while (cin >> N) {
    a = getTwo(N) - getFive(N);
    b = getN(N, 3) % 4;
    c = getN(N, 7) % 4;
    d = getN(N, 9) % 4;
    r = rb[b] * rc[c] * rd[d];
    if (a) r *= ra[a%4];
    r %= 10;
    cout << r << endl;
  }
}