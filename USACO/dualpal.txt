/*
ID: MasterRay
LANG: C++
TASK: dualpal
*/
 
#include <stdio.h>
 
int Check(int x, int base)
{
	static const char code[] = "0123456789";
	static char buff[20];
	char *p = buff, *q = buff;
	for (; *q++ = code[x%base], x /= base; );
	for (; p < --q; ++p)
		if (*p != *q)
			return 0;
	return 1;
}
 
int main()
{
	freopen("dualpal.in", "r", stdin);
	freopen("dualpal.out", "w", stdout);
	int m, n;
	scanf("%d%d", &n, &m);
	for (; ++m, n; )
	{
		int cnt = 0;
		for (int base = 2; base <= 10; ++base)
			cnt += Check(m, base);
		if (cnt >= 2)
		{
			--n;
			printf("%d\n", m);
		}
	}
}/*
   ID : Your ID
   PROG : dualpal
   LANG : C++
*/
#include <iostream>
#include <fstream>
using namespace std;
ifstream fin ("dualpal.in");
ofstream fout ("dualpal.out");
const char a[] = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9'};
int n, m;
bool check(int n, int m)
{
   string s("");
   do
   {
      s = a[n % m] + s;
      n /= m;
   } while (n > 0);
   if (s.size() == 1) return true;
   for (int i = 0; i <= s.size() / 2 - 1; i++)
     if (s[i] != s[s.size() - i - 1])
        return false;
   return true;
}
int main(void)
{
    int tot(0), k;
    fin >> n >> m;
    for (int i = m + 1; tot < n; i++)
    {
      k = 0;
      for (int j = 2; j <= 10; j++)
      {
         if (check(i, j))
            k++;
         if (k == 2)
         {
           tot++;
           fout << i << endl;
           break;
         }
      }
    }
    return 0;
}
--------------------------------------/*
ID:09y-z2
PROG:dualpal
LANG:C++
*/
#include <iostream>
using namespace std;
 
int check(int rec[],int len){
     int mid=len/2;
     if(rec[0]==0||rec[len]==0)
        return false;
     else
     for(int i=0;i<=mid;i++){
         if(rec[i]!=rec[len-i])
         return false;
     }
     return true;
}
 
int take(int num){
    int times=0;
    for(int base=2;base<=10;base++){
        int i=0;
        int x=num;
        int rec[20]={0};                 //S的范围是五位数
              while(x!=0){
              rec[i++]=x%base;
              x/=base;
        }
        if(check(rec,i-1))times++;   //要求大于两种进制才输出
    }                                       //要让它跑完十个循环   
    int flag=false;
    if(times>=2)return true;
    return flag;
}
 
int main(){
    int N, S;
    freopen("dualpal.in","r",stdin);
    freopen("dualpal.out","w",stdout);
    cin>>N>>S;
    int times=0,i=1;
    while(times<N){
          if(i+S<10){                   //注意考虑个位数的情况
             cout<<i+S<<endl;
             times++;
          }
          else 
          if(take(i+S)){
               cout<<i+S<<endl;
               times++;
          }
          i++;
    }
    return 0;
}
 
 
________________________________________/*
ID: 31440461
LANG: C++
TASK: dualpal
*/
#include<iostream>
#include<fstream>
using namespace std;
 
bool legal(int num)
{
  int times=0;
  for (int base=2;base<=10;base++)
    {
      int p=0,que[32],x=num;
      x=num;
      while (x)
	{
      que[++p]=x % base;
	  x=x/base; 
	}
      bool ok=1;
      for (int j=1;ok && (j<=p);j++) ok=(ok && que[j]==que[p-j+1]);
      if (ok) times++;
      if (times>1) return true;
    }
  return false;
}
 
int main()
{
  int s,n;
  ifstream fin("dualpal.in");
  ofstream fout("dualpal.out");
  fin>>n>>s;
  for (int i=s+1;n;i++)
      if (legal(i)) 
	{
	  fout<<i<<endl;
	  n--;
	}
  return 0;
}________________________________________
</source>
/*
ID: 31440461
LANG: C++
TASK: dualpal
*/
#include<iostream>
#include<fstream>
using namespace std;
 
bool legal(int num)
{
  int times=0;
  for (int base=2;base<=10;base++)
    {
      int p=0,que[32],x=num;
      x=num;
      while (x)
	{
      que[++p]=x % base;
	  x=x/base; 
	}
      bool ok=1;
      for (int j=1;ok && (j<=p);j++) ok=(ok && que[j]==que[p-j+1]);
      if (ok) times++;
      if (times>1) return true;
    }
  return false;
}
 
int main()
{
  int s,n;
  ifstream fin("dualpal.in");
  ofstream fout("dualpal.out");
  fin>>n>>s;
  for (int i=s+1;n;i++)
      if (legal(i)) 
	{
	  fout<<i<<endl;
	  n--;
	}
  return 0;
}________________________________________
</source>
/*
ID: 31440461
LANG: C++
TASK: dualpal
*/
#include<iostream>
#include<fstream>
using namespace std;
 
bool legal(int num)
{
  int times=0;
  for (int base=2;base<=10;base++)
    {
      int p=0,que[32],x=num;
      x=num;
      while (x)
	{
      que[++p]=x % base;
	  x=x/base; 
	}
      bool ok=1;
      for (int j=1;ok && (j<=p);j++) ok=(ok && que[j]==que[p-j+1]);
      if (ok) times++;
      if (times>1) return true;
    }
  return false;
}
 
int main()
{
  int s,n;
  ifstream fin("dualpal.in");
  ofstream fout("dualpal.out");
  fin>>n>>s;
  for (int i=s+1;n;i++)
      if (legal(i)) 
	{
	  fout<<i<<endl;
	  n--;
	}
  return 0;
}________________________________________
</source>
/*
ID: 31440461
LANG: C++
TASK: dualpal
*/
#include<iostream>
#include<fstream>
using namespace std;
 
bool legal(int num)
{
  int times=0;
  for (int base=2;base<=10;base++)
    {
      int p=0,que[32],x=num;
      x=num;
      while (x)
	{
      que[++p]=x % base;
	  x=x/base; 
	}
      bool ok=1;
      for (int j=1;ok && (j<=p);j++) ok=(ok && que[j]==que[p-j+1]);
      if (ok) times++;
      if (times>1) return true;
    }
  return false;
}
 
int main()
{
  int s,n;
  ifstream fin("dualpal.in");
  ofstream fout("dualpal.out");
  fin>>n>>s;
  for (int i=s+1;n;i++)
      if (legal(i)) 
	{
	  fout<<i<<endl;
	  n--;
	}
  return 0;
}________________________________________
</source>
/*
ID: 31440461
LANG: C++
TASK: dualpal
*/
#include<iostream>
#include<fstream>
using namespace std;
 
bool legal(int num)
{
  int times=0;
  for (int base=2;base<=10;base++)
    {
      int p=0,que[32],x=num;
      x=num;
      while (x)
	{
      que[++p]=x % base;
	  x=x/base; 
	}
      bool ok=1;
      for (int j=1;ok && (j<=p);j++) ok=(ok && que[j]==que[p-j+1]);
      if (ok) times++;
      if (times>1) return true;
    }
  return false;
}
 
int main()
{
  int s,n;
  ifstream fin("dualpal.in");
  ofstream fout("dualpal.out");
  fin>>n>>s;
  for (int i=s+1;n;i++)
      if (legal(i)) 
	{
	  fout<<i<<endl;
	  n--;
	}
  return 0;
}________________________________________
/*
  ID:sgfreed1
  PROG:dualpal
  LANG:C++
*/
 
#include <fstream>
#include <string>
 
using namespace std;
 
ifstream fin("dualpal.in");
ofstream fout("dualpal.out");
 
const int maxn=999;
 
int n,s;
 
int change(int k,int m)
{
	int i=0;
	int a[maxn];
	while(k!=0)
	{
		a[++i]=k%m;
		k/=m;
	}
	for(int j=1;j<=i/2+1;++j)
	if(a[j]!=a[i-j+1])return 0;
	return 1;
}
 
int check(int k)
{
	int t=0;
	for(int i=2;i<=11;++i)
	if(t==2)return 1;
	else if(change(k,i))t++;
	return 0;
}
 
int main()
{
	fin>>n>>s;
	while(n)
	{
		s++;
		if(check(s)){n--;fout<<s<<endl;}
	}
	return 0;
}