/*
ID:ybojan2
LANG:C++
TASK:nuggets
*/
#include <fstream>
using namespace std;
ifstream cin("nuggets.in");
ofstream cout("nuggets.out");
int gcd(int x,int y)
{
	if (x>y) swap(x,y);
	if (x==0) return y;
	return gcd(y%x,x);
}
int main()
{
	int n,num[11],k;
	bool dp[100000];
	cin>>n;
	for (int i=1;i<=n;i++) cin>>num[i];
	k=num[1];
	for (int i=2;i<=n;i++) k=gcd(k,num[i]);
	if (k!=1)
	{
		cout<<0<<endl;
		return 0;
	}
	memset(dp,false,sizeof(dp));
	dp[0]=true;
	for (int i=1;i<=65536;i++)
	{
		for (int j=1;j<=n;j++)
			if (i>=num[j]) dp[i]=dp[i]||dp[i-num[j]];
	}
	int res=0;
	for (int i=65536;i>=1;i--)
		if (!dp[i])
		{
			res=i;break;
		}
	cout<<res<<endl;
	return 0;
}#include <stdio.h>
 
long n,t;
long x[11];
long d[258];
 
main(){
	freopen("nuggets.in","r",stdin);
	freopen("nuggets.out","w",stdout);
	long i,j,k=0,l;
	scanf("%ld",&n);
	for(i=0;i<n;i++)scanf("%ld",&x[i]);
	for(i=0;i<n;i++)
		for(j=i+1;j<n;j++)
			if(x[i]>x[j]){
				k=x[i];x[i]=x[j];x[j]=k;
			}
	if(x[0]==1){printf("0\n");return 0;}
	d[x[n-1]]=x[n-1];
	d[x[0]]=x[0];
	d[0]=-1;
	while(1){
		l=0;
		for(i=1;i<=x[n-1];i++){
			if(d[i]!=0)
				for(j=0;j<n-1;j++)
					if(d[(i+x[j])%x[n-1]]==0){
						l=1;
						t++;
						d[(i+x[j])%x[n-1]]=d[i]+x[j];
						k=d[i]+x[j]-x[n-1];
					}
		}
		if(l==0){printf("0\n");return 0;}
		if(t==x[n-1]-2)break;
	}
	printf("%ld\n",k);
	return 0;
}#include<cstdio>
#include<cstdlib>
#include<cstring>
int f[500000],temp,N;
int main(){
freopen("nuggets.in","r",stdin);
freopen("nuggets.out","w",stdout);
    memset(f,0,sizeof(f)); f[0]=1;
    scanf("%d",&N);
    while (N--){
          scanf("%d",&temp);
          for (int i=temp;i<=79500;i++) if (f[i-temp]) f[i]=1;
    } temp=0;
    for (int i=79500;i>=0;i--) if (!f[i]) {temp=i;break;}
    for (int i=79500;i>=79000;i--) if (!f[i]) {temp=0;break;}
    printf("%d\n",temp);
    return 0;
}  //最短~几乎秒/*
	ID:echooat1
	LANG:C++
	TASK:nuggets
	*/
#include <fstream>
#include <climits>
#define len 2000000
#define max(a,b) ((a)<(b)?(a):(b))
using namespace std;
int main(int argc,char** argv){
	ifstream fin("nuggets.in");
	ofstream fout("nuggets.out");
	long n;fin >>n;
	long a[100]={0},ma=LONG_MAX;
	bool f[len]={0};
	for(long i=1;i<=n;i++){
		fin >>a[i];
		ma=max(ma,a[i]);
		f[a[i]]=true;
		if(a[i]==1){fout <<'0'<<endl;fin.close();fout.close();exit(0);}
	}
	f[0]=true;
	long l=1,p=0,ans=0;
	while(l<len){
		for(long i=1;i<=n;i++)
			if(a[i]<=l&&f[l-a[i]]){
				f[l]=true;
				p++;
				break;
			}
		if(!f[l]){p=0;ans=l;}
		if(p==ma)break;
		l++;
	}
	if(l<len)
	fout <<ans<<endl;
	else fout <<0<<endl;
	fin.close();fout.close();
	return 0;
}