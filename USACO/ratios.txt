/*
ID:ybojan2
LANG:C++
TASK:ratios
*/
 
#include <iostream>
#include <fstream>
 
using namespace std;
 
int gcd(int x,int y)
{
    if (x<y) swap(x,y);
    if (x==0) return y;
    return gcd(y%x,x);
}
 
int main()
{
    ifstream fin("ratios.in");
    ofstream fout("ratios.out");
 
    int a[4],b[4],c[4],x,y,z,d;
 
    for (int i=0;i<=3;i++)
        fin>>a[i]>>b[i]>>c[i];
 
    for (int i=0;i<100;i++)  
        for (int j=0;j<100;j++)
            for (int k=0;k<100;k++)
                {
                     x=a[1]*i+a[2]*j+a[3]*k;
                     y=b[1]*i+b[2]*j+b[3]*k;
                     z=c[1]*i+c[2]*j+c[3]*k;
                     if (((a[0]!=0)&&(x==0))||((b[0]!=0)&&(y==0))||((c[0]!=0)&&(z==0))) continue;
                     if (((x!=0)&&(x%a[0]!=0))||((y!=0)&&(y%b[0]!=0))||((z!=0)&&(z%c[0]!=0))) continue;
                     if ((x*b[0]==y*a[0])&&(y*c[0]==z*b[0])){
                                                             if (x!=0) d=x/a[0];
                                                             else if (y!=0) d=y/b[0];
                                                             else if (z!=0) d=z/c[0];
                                                             fout<<i<<" "<<j<<" "<<k<<" "<<d<<endl;
                                                             return 0;
                                                             }
                 }
    fout<<"NONE"<<endl;
    return 0;
}/*
ID: cmykrgb1
PROG: ratios
LANG: C++
*/
#include <iostream>
#include <fstream>
using namespace std;
class feed
{
public:	long a,b,c;
};
 
feed F[4];
long I,J,K,R,pmin=0x7FFFFFFF;
ifstream fi("ratios.in");
ofstream fo("ratios.out");
 
void init()
{
	long i;
	for (i=0;i<4;i++)
		fi >> F[i].a>>F[i].b>>F[i].c;
}
 
void search()
{
	long i=0,j=0,k=0,a,b,c,p,q,r;
	q=F[0].a+F[0].b+F[0].c;
	for (i=0;i<100;i++)
		for (j=0;j<100;j++)
			for (k=0;k<100;k++)
			{
				a=F[1].a*i+F[2].a*j+F[3].a*k;
				b=F[1].b*i+F[2].b*j+F[3].b*k;
				c=F[1].c*i+F[2].c*j+F[3].c*k;
				p=a+b+c;
				if (p!=0 && p % q==0)
				{
					r= p/q;
					if (F[0].a*r==a && F[0].b*r==b && F[0].c*r==c && p<pmin)
					{
						pmin=p;
						I=i;J=j;K=k;R=r;
					}
				}
			}
}
 
void print()
{
	if (I==0 && J==0 && K==0)
		fo << "NONE"<<endl;
	else
		fo << I << ' ' << J << ' ' << K << ' ' << R << endl;
	fi.close();
	fo.close();
}
 
int main()
{
	init();
	search();
	print();
	return 0;
}C++语言: Codee#13555
01 
06 #include <fstream>
07 using namespace std;
08 long a[4][4]={0},goal[4]={0};
09     ifstream fin("ratios.in");
10     ofstream fout("ratios.out");
11 bool go(long x,long y,long z){
12     double temp[4]={0};
13     long k=0;
14     for(long i=1;i<=3;i++){
15         long m=0;
16         m=x*a[1][i]+y*a[2][i]+z*a[3][i];
17         if(goal[i]==0&&m==0){k=i;continue;}
18         if(goal[i]!=0&&m%goal[i]==0)temp[i]=m/goal[i];
19             else temp[i]=rand();
20         }
21     for(long i=1;i<=3;i++)
22         if(temp[i])temp[k]=temp[i];
23     if(temp[1]==temp[2]&&temp[2]==temp[3]&&temp[1]!=0){
24         fout <<x<<' '<<y<<' '<<z<<' '<<temp[1]<<endl;
25         return true;
26     }
27     return false;
28 }
29 int main(int argc,char** argv){
30     for(long i=1;i<=3;i++)fin >>goal[i];
31     for(long i=1;i<=3;i++)
32         for(long j=1;j<=3;j++)
33             fin >>a[i][j];
34     for(long i=0;i<=100;i++)
35         for(long j=0;j<=100;j++)
36             for(long k=0;k<=100;k++){
37                 if(go(i,j,k)){
38     fin.close();fout.close();
39                     exit(0);
40                 }
41             }
42     fout <<"NONE"<<endl;
43             fin.close();fout.close();    
44     return 0;
45 }我的枚举这个应该跑得比上面的枚举都快
我先枚举结果的份数 然后用结果的份数限制合成品的份数
/*
ID:cyc20051
LANG:C++
PROB:ratios
 */
/*
   Test 1: TEST OK [0.000 secs, 2884 KB]
   Test 2: TEST OK [0.011 secs, 2884 KB]
   Test 3: TEST OK [0.000 secs, 2884 KB]
   Test 4: TEST OK [0.011 secs, 2884 KB]
   Test 5: TEST OK [0.011 secs, 2884 KB]
   Test 6: TEST OK [0.011 secs, 2884 KB]
 */
#include <cstdio>
 
int d[4][3];
 
int main()
{
	freopen("ratios.in", "r", stdin);
	freopen("ratios.out", "w", stdout);
	for (int i = 0; i < 4; ++i)
	{
		for (int j = 0; j < 3; ++j)
			scanf("%d", &d[i][j]);
	}
	int p;
	for (p = 0; p < 3; ++p)
		if (d[3][p]) break;
	for (int lam = 1; lam <= 100; ++lam)
	{
		for (int i = 0; i<=100 && d[1][0]*i<=d[0][0]*lam && d[1][1]*i<=d[0][1]*lam && d[1][2]*i<=d[0][2]*lam; ++i)
			for (int j = 0; j<=100 && d[1][0]*i+d[2][0]*j<=d[0][0]*lam && d[1][1]*i+d[2][1]*j<=d[0][1]*lam && d[1][2]*i+d[2][2]*j<=d[0][2]*lam; ++j)
			{
				int k = (d[0][p]*lam - d[1][p]*i - d[2][p]*j) / d[3][p], kk;
				for (kk = 0; kk < 3; ++kk)
				{
					if (d[1][kk]*i + d[2][kk]*j + d[3][kk]*k != d[0][kk]*lam)
						break;
				}
				if (kk == 3)
				{
					printf("%d %d %d %d\n", i, j, k, lam);
					return 0;
				}
			}
	}
	printf("NONE\n");
	return 0;
}行列式O(1)
/*
ID: budaish1
PROG: ratios
LANG: C++
*/
#include <cstdio>
#include <cstring>
using namespace std;
 
FILE *fin = fopen("ratios.in","r");
FILE *fout = fopen("ratios.out","w");
 
int
p[4],x[4],y[4],z[4];
 
int
a,b,c,d,t;
 
int gcd(int a, int b)
{
    while (b^=a^=b^=a%=b);
    return a;
}
 
void init()
{
    for(int i=1 ; i<=3 ; i++)
        fscanf(fin,"%d",&p[i]);
    for(int i=1 ; i<=3 ; i++)
        fscanf(fin,"%d",&x[i]);
    for(int i=1 ; i<=3 ; i++)
        fscanf(fin,"%d",&y[i]);
    for(int i=1 ; i<=3 ; i++)
        fscanf(fin,"%d",&z[i]);
}
 
void doit()
{
    t = (x[1]*y[2]*z[3] + y[1]*z[2]*x[3] + z[1]*x[2]*y[3])
       -(x[1]*z[2]*y[3] + y[1]*x[2]*z[3] + z[1]*y[2]*x[3]);
    if(t == 0)
        {fprintf(fout,"NONE\n");return;}
    a = (p[1]*y[2]*z[3] + y[1]*z[2]*p[3] + z[1]*p[2]*y[3])
       -(p[1]*z[2]*y[3] + p[2]*y[1]*z[3] + p[3]*y[2]*z[1]);
    b = (x[1]*p[2]*z[3] + p[1]*z[2]*x[3] + z[1]*x[2]*p[3])
       -(x[1]*z[2]*p[3] + p[1]*x[2]*z[3] + z[1]*p[2]*x[3]);
    c = (x[1]*y[2]*p[3] + y[1]*p[2]*x[3] + y[3]*x[2]*p[1])
       -(x[2]*y[1]*p[3] + y[2]*x[3]*p[1] + x[1]*y[3]*p[2]);
    if(t < 0)
    {
        a = -a;
        b = -b;
        c = -c;
        t = -t;
    }
    if(a<0 || b<0 || c<0) {fprintf(fout,"NONE\n");return;}
    int tmp = gcd(gcd(a,gcd(b,c)),t);
    fprintf(fout,"%d %d %d %d\n",a/tmp,b/tmp,c/tmp,t/tmp);
}
 
void debug()
{
    printf("\n");
    printf("%d %d %d %d",a,b,c,t);
}
 
int main(void)
{
    init();
    doit();
    //debug();
    fclose(fin);
    fclose(fout);
    return 0;
}