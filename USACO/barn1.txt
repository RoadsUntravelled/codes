#include <iostream>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <algorithm>
#include <string>
#include <map>
#include <list>
using namespace std;
 
#define MIN(a, b) (((a) < (b)) ? (a) : (b))
 
FILE *in, *out;
 
void openfile() { in = fopen("barn1.in", "r"); out = fopen("barn1.out", "w+"); }
void closefile() { fclose(in); fclose(out); }
 
/** TODO VAR. */
int m, s, c;
int num[205], dp[205][55], minn = (int)(2e9);
 
bool cmp(int a, int b) { return a < b; }
 
int main()
{
    openfile();
 
    fscanf(in, "%d%d%d", &m, &s, &c);
    for(int i = 0; i < c; i++) fscanf(in, "%d", num + i);
    sort(num, num + c, cmp);
    memset(dp, 0x1f, sizeof(dp));
    dp[0][0] = 1;
    for(int i = 1; i < c; i++)
    {
        for(int j = 0; j <= i && j < m; j++)
        {
            dp[i][j] = dp[i - 1][j] + (num[i] - num[i - 1]);
            if(j > 0) dp[i][j] = MIN(dp[i][j], dp[i - 1][j - 1] + 1);
 
            if(c - 1 == i) minn = MIN(minn, dp[i][j]);
        }
    }
 
    fprintf(out, "%d\n", minn);
 
    closefile();
    return 0;
}/*
ID: MasterRay
LANG: C++
TASK: barn1
*/
#include <algorithm>
#include <cstdio>
#include <numeric>
using namespace std;
 
int a[200], b[200];
 
int main()
{
	freopen("barn1.in", "r", stdin);
	freopen("barn1.out", "w", stdout);
	int m, s, c;
	scanf("%d%d%d", &m, &s, &c);
	for (int i = 0; i < c; ++i)
		scanf("%d", &a[i]);
	sort(a, a+c);
	s = a[c-1]-a[0]+1;
	for (int i = 1; i < c; ++i)
		b[i] = a[i]-a[i-1]-1;
	sort(b+1, b+c, greater<int>());
	for (int i = 1; i < m; ++i)
		s -= b[i];
	printf("%d\n", s);
}/*
    ID : Your ID
    PROG : barn1
    LANG : C++
*/
#include <iostream>
#include <fstream>
#include <time.h>
using namespace std;
ifstream fin ("barn1.in");
ofstream fout ("barn1.out");
int m, s, c;
int a[300], b[300], mark[300];
int qsort(int l, int r)
{
    int i, j, k;
    i = l; j = r; k = a[rand() % (r - l + 1) + l];
    do
    {
      while (i <= j && a[i] < k) i++;
      while (i <= j && a[j] > k) j--;
      if (i <= j)
      {
         a[0] = a[i]; a[i] = a[j]; a[j] = a[0];
         i++; j--;
      }
    } while (i <= j);
    if (l < j) qsort(l, j);
    if (i < r) qsort(i, r);
}
int main(void)
{
    fin >> m >> s >> c;
    for (int i = 1; i <= c; i++)
      fin >> a[i];
    srand (time (0));
    if (c >= 1) qsort(1, c);
    int now(a[c] - a[1] + 1);
    for (int i = 2; i <= c; i++)
      b[i - 1] = a[i] - a[i - 1] - 1;
    for (int i = 1; i < m; i++)
    {
       int max(0), tt(0);       
       for (int j = 1; j < c; j++)
         if (b[j] > max && mark[j] == false)
         {
            tt = j;
            max = b[j];
         }
       mark[tt] = true;
       now -= max;
    }      
    fout << now << endl;
}== /*
   ID : your id
   PROG : barn1
   LANG : C++
*/
//逆向思维 
#include<iostream>
#include<fstream>
#define max 202
using namespace std;
ifstream  fin("barn1.in");
ofstream  fout("barn1.out");
 
int a[max];//有牛的编号
int b[max];//间隙
int now;//最大长度 
int m,s,c;
 
int cmp2(const void *va,const void *vb)
{
    return   * (int *)vb - *(int *)va;
}
 
int main()
{   
    int i;
    fin>>m>>s>>c;
    for(  i = 0; i < c; i ++) fin>>a[i];
    qsort( a, c, sizeof( a[0] ), cmp2);//编号从大到小 
    for( i = 0;i < c - 1; i ++)
          b[i - 1] = a[i] - a[i + 1] - 1;//所有间隔 
    qsort( b, c, sizeof( b[0] ), cmp2);//所有间隔按从大到小排列 
    now = a[0] - a[c - 1] + 1;
    for( i = 0 ; i < m - 1 ; i ++)   
      now = now - b[i];  //减去那些间隔从大到小，直到块数等于最大购入量
    fout<<now<<endl;
     return 0;
}
 ==排序过程用hash,而不是用<algorithm>里的sort函数
渐进复杂度o(S)
/*
  ID : 31440461
  PROG : barn1
  LANG : C++
*/
#include <iostream>
using namespace std;
const int MAXS=200+10;
 
int main()
{    
    freopen("barn1.in","r",stdin);
    freopen("barn1.out","w",stdout);
    int m,s,c;
    cin >> m >> s >> c;
    bool a[MAXS];
    memset(a,0,sizeof(a));
    int x;
    for (int i=0;i<c;i++) cin >> x, a[x]=1;
    int cou[MAXS];
    memset(cou,0,sizeof(cou));
    x=1;
    while (!a[x]) x++;
    for (int i=x+1;i<MAXS;i++)
       if (a[i]) ++cou[i-x-1], x=i;
    if (m>=c) { cout << c << endl;return 0;}
    x=c-m;
    int ans=0;
    for (int i=0;i<MAXS;i++)
    {
        x-=cou[i];
        ans+=i*cou[i];
        if (x<=0) {ans-=(-x)*i;break;}
    }
    cout << ans+c << endl;
    return 0;
}/*
ID: lichaoy2
PROG: barn1
LANG: C++
*/
#include<iostream>
#include<algorithm>
 
using namespace std;
 
const int MAXS = 202;
const int MAXM = 50;
 
int dis[MAXS];
int stn[MAXS];
 
int main(){
	int m,s,c,i,x;
	freopen("barn1.in","r",stdin);
	freopen("barn1.out","w",stdout);
	cin >> m >> s >> c;
	if(m >= c) { cout << c << endl; return 0;}
	for(i = 0; i < c; i++)
		cin >> stn[i];
	sort(stn, stn+c);
	for(i = 0; i < c-1; i++)
		dis[i] = stn[i+1] - stn[i]-1;
	sort(dis,dis+c-1);
	x = stn[c-1] - stn[0] +1;
	for(i = 0; i < m-1; i++)
		x -= dis[c-2-i];
	cout << x << endl;
	return 0;
}