/*
	ID: lvxiao31
	PROG: gift1
	LANG: C++
*/
#include <fstream>
using namespace std;
 
ifstream fin("gift1.in");
ofstream fout("gift1.out");
 
int main()
{
	static int ans[10];
	int np,i,j,p,ini,ng;
	string a[10],giv,rec;
	fin>>np;
	for (i=0;i<np;i++)
		fin>>a[i];
	for (i=0;i<np;i++)
	{
		fin>>giv>>ini>>ng;
		for (p=0;giv!=a[p];p++);
		ans[p]-=ng==0?0:ini-ini%ng;
		for (j=0;j<ng;j++)
		{
			fin>>rec;
			for (p=0;rec!=a[p];p++);
			ans[p]+=ini/ng;
		}
	}
	for (i=0;i<np;i++)
		fout<<a[i]<<' '<<ans[i]<<endl;
	return 0;
}/*
  ID : Your ID
  PROG : gift1
  LANG : C++
*/
#include <iostream>
#include <fstream>
#include <string>
using namespace std;
struct people
{
       string name;
       int money;
}
p[10];
int main()
{
    ifstream fin("gift1.in");
    ofstream fout("gift1.out");
    int n, i, j, money, num;
    string name;
    fin >> n;
    for (i = 0; i < n; i++)
        fin >> p[i].name;
    for (i = 0; i < n; i++)
    {
        fin >> name >> money >> num;
        for (j = 0; j < n; j++)
            if (p[j].name == name) break;
        if (num != 0)        
           p[j].money += money % num;    
        p[j].money -= money;
        for (j = 0; j < num; j++)
        {
            fin >> name;
            for (int z = 0; z < n; z++)
                if (p[z].name == name)
                   {
                     p[z].money += money / num;
                     break;
                   }
        }
    }
    for (i = 0; i < n; i++)
        fout << p[i].name << " " << p[i].money << endl;          
}#include <iostream>
using namespace std;
 
char n[15],name[11][15];
int incm[11],np,ngi,npg;
 
void shop(char *s){
     cin>>ngi>>npg;
     if (!ngi || !npg)
     return;
     for (int i=0;i<np;i++)
     if (!strcmp(s,name[i])){
        if (npg!=0) incm[i]+=-ngi+ngi%npg;
        break;
     }
     char dn[15];
     for (int i=0;i<npg;i++){
         cin>>dn;
         for(int i=0;i<np;i++)
         if (!strcmp(dn,name[i])){
            incm[i]+=ngi/npg;
            break;
         }
 
     }
}
 
int main(){
    freopen("gift1.in","r",stdin);
    freopen("gift1.out","w",stdout);
    memset(incm,0,sizeof(int));
    cin>>np;
    for (int i=0;i<np;i++)
         cin>>name[i];
    for (int i=0;i<np;i++){
        cin>>n;
        shop(n);
    }
    for (int i=0;i<np;i++)
        cout<<name[i]<<' '<<incm[i]<<endl;
    return 0;
}/*
ID: richeir2
PROG: gift1
LANG: C++
*/
#include <fstream>
#include <cstring>
using namespace std;
ifstream fi("gift1.in");
ofstream fo("gift1.out");
 
int n;
struct Person{
       char name[21];
       int money;
       int renShu;
       int avrage;
       int songChu;
       int get;
};
Person p[11];
 
void inPut()
{
     fi>>n;
     for( int i=1;i<=n;i++ ){
          fi>>p[i].name;
          p[i].get=0;
     }
}
 
int findName( char ch[21] )
{
    for( int i=1;i<=n;i++ ){
         if( strcmp( p[i].name,ch ) !=0 )
             continue;
         else
             return i;
    }
}
 
void solve()
{
     char tname[21];
     int pos;
     for( int i=1;i<=n;i++ ){
          fi>>tname;
          pos=findName(tname);
          fi>>p[pos].money>>p[pos].renShu;
          if( p[pos].renShu==0 ){
              p[pos].get+=p[pos].money;
              continue;
          }
          p[pos].avrage=p[pos].money/p[pos].renShu;
          p[pos].songChu=p[pos].avrage*p[pos].renShu;
          p[pos].get+=(p[pos].money-p[pos].songChu);
          for( int j=1;j<=p[pos].renShu;j++ ){
               char ttname[21];
               int namePos;
               fi>>ttname;
               namePos=findName(ttname);
               p[namePos].get+=p[pos].avrage;
          }
     }
 
}
 
void outPut()
{
     for( int i=1;i<=n;i++ )
          fo<<p[i].name<<" "<<p[i].get-p[i].money<<endl;
}
 
int main()
{
    inPut();
    solve();
    outPut();
 
    return 0;
}
//Program By Richeir 27-07-09 00:39/*
   ID : linuxco1
   PROG : gift1
   LANG : C++
*/
#include<fstream>
using namespace std;
ifstream fin("gift1.in");
ofstream fout("gift1.out");
class node
{	public:
	int money,ng;
	string name,give[15];
}people[15];
int main()
{	int m,n,i,j,k,ln,l,rec[15]={0},mon[15]={0};
	string peo;
	fin>>n;
	for(i=0;i<n;i++)
		fin>>people[i].name;
	for(i=0;i<n;i++)
		people[i].money=people[i].ng=0;
	for(j=0;j<n;j++)
	{	fin>>peo>>m>>k;
		for(i=0;i<n&&people[i].name!=peo;i++);
		people[i].money=mon[i]=m;
		people[i].ng=k;
		for(l=0;l<k;l++)
			fin>>people[i].give[l];
	}
	for(j=0;j<n;j++)
	{	if(people[j].ng==0||people[j].money==0) continue  ;
			for(ln=0;ln<people[j].ng;ln++)
			{	for(i=0;i<n&&people[j].give[ln]!=people[i].name;i++);
					rec[i]+=people[j].money/people[j].ng;
			}
			people[j].money%=people[j].ng;
	}
	for(i=0;i<n;i++)
		fout<<people[i].name<<' '<<rec[i]-(mon[i]-people[i].money)<<endl;
	fout.close();
	fin.close();
	return 0;
}
/*
ID:xredman2
PROG:gift1
LANG:C++
*/
#include <iostream>
#include <fstream>
#include <string>
#include <map>
#include <vector>
using namespace std;
 
ifstream infile("gif1.in");
ofstream outfile("gif1.out");
 
int main()
{
    map<string, int> M;
    vector<string> V;
    int NP;
    int i, j, money, count, fmoney;
    string username, friendname;
    while(infile>>NP)
    {
        M.clear();
        V.clear();
        for(i = 0; i < NP; i++)
        {
            infile>>username;
            M.insert(map<string, int>::value_type(username, 0));
            V.push_back(username);
        }
        for(i = 0; i < NP; i++)
        {
            infile>>username;
            infile>>money>>count;
            if(count == 0 || money == 0)
            	continue;
            fmoney = money / count;
            M[username]  -= fmoney * count;
            for(j = 0; j < count; j++)
            {
            	infile>>friendname;
            	M[friendname] += fmoney;
			}
        }
        for(i = 0; i < NP; i++)
        	outfile<<V[i]<<" "<<M[V[i]]<<endl;
 
    }
    return 0;
}#include<iostream>
#include<fstream>
#include<string>
#include<map>
using namespace std;
int main()
{
	string names[50];
	map <string,int> reci,given;	
	int np;
	ifstream cin("gift1.in");
	ofstream cout("gift1.out");	
	cin>>np;
	for (int i=1;i<=np;i++)
		cin>>names[i];
	for (int i=1;i<=np;i++)
	{
		string temp;
		int tempr,tempg,j;		
		cin>>temp;
		cin>>tempg>>j;
		for (int k=1;k<=j;k++)
		{
			string temp2;			
			cin>>temp2;
			reci[temp2]+=tempg/j;
			given[temp]+=tempg/j;
		}	
	}
	for (int i=1;i<=np;i++)
		cout<<names[i]<<" "<<reci[names[i]]-given[names[i]]<<endl;
	return 0;
 
}/*
ID: fangyua5
PROG: gift1
LANG: C++
*/
#include <iostream>
#include <fstream>
#include <string>
using namespace std;
ofstream fout ("gift1.out");
ifstream fin ("gift1.in");
 
struct people
{
	string name;
	int recv_cnt;
	int send_cnt;
};
 
int find_index(people *&p,string name,int n)
{
	for(int i=0;i<n;i++)
	{
		if(p[i].name==name)
			return i;
	}
}
int main()
{
    int n,i;
	fin>>n;
	people * peoples=new people[n];
	for(i=0;i<n;i++)
	{
		fin>>peoples[i].name;
		peoples[i].recv_cnt=0;
		peoples[i].send_cnt=0;
	}
 
	for(i=0;i<n;i++)
	{
		string name;
		fin>>name;
		int k=find_index(peoples,name,n);
		int total_money,friends_cnt;
		fin>>total_money>>friends_cnt;
		string *names=new string[friends_cnt];
		int *indexs=new int[friends_cnt];
 
		int divided;
		if(friends_cnt!=0)
			divided=total_money/friends_cnt;
		else
			divided=0;
		peoples[k].send_cnt=divided*friends_cnt;
		for(int j=0;j<friends_cnt;j++)
		{
			fin>>names[j];
			indexs[j]=find_index(peoples,names[j],n);
			peoples[indexs[j]].recv_cnt+=divided;
		}
 
	}
	for(i=0;i<n;i++)
	{
		fout<<peoples[i].name<<" "<<(peoples[i].recv_cnt-peoples[i].send_cnt)<<endl;
	}
    return 0;
}