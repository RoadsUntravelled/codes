#include <iostream>
#include <fstream>
using namespace std;
ifstream inf("wissqu.in");
ofstream ouf("wissqu.out");
struct move_t{
    int t,r,c;   
} ans[17],tans[17];
int num[5],map[6][6],sum=0;
bool u[5][5];
 
void dfs(int d,int ty){
    if (d>=16)
    {
        if (!sum) 
          memcpy(ans,tans,sizeof(ans));    
        sum++;
        return;
    } 
    int i,j,k;
    for (i=1;i<=4;i++)
      for (j=1;j<=4;j++)
        if (!u[i][j] && map[i-1][j-1]!=ty && map[i-1][j]!=ty && map[i-1][j+1]!=ty
        && map[i][j-1]!=ty && map[i][j]!=ty && map[i][j+1]!=ty 
        && map[i+1][j-1]!=ty && map[i+1][j]!=ty && map[i+1][j+1]!=ty)
        {
            int tmp=map[i][j];
            map[i][j]=ty;num[ty]--;
            u[i][j]=true;tans[d+1].t=ty;
            tans[d+1].r=i;tans[d+1].c=j;
            if (d==15) dfs(d+1,0);
            else
              for (k=0;k<5;k++)
                if (num[k])
                  dfs(d+1,k);
            map[i][j]=tmp;num[ty]++;
            u[i][j]=false;
        }
}
 
main(){
    int i,j;
    memset(map,255,sizeof(map));
    ans[1].t=5;
    for (i=1;i<=4;i++)
    {
        for (j=1;j<=4;j++)
        {
            char ch;
            inf >> ch;
            map[i][j]=ch-65;
            num[map[i][j]]++;
        }
        inf.ignore(255,'\n');
    }   
    num[3]++;num[2]--;
    dfs(0,3);
    for (i=1;i<=16;i++)
      ouf << (char)(ans[i].t+65) << ' ' << ans[i].r << ' ' << ans[i].c << endl;
    ouf << sum << endl;    
}
/*
ID: XIONGNA1
PROG: wissqu
LANG: C++
*/
#include<iostream>
#include<cstring>
using namespace std;
 
const int dx[9]={0,1,0,-1,-1,-1,0,1,1};
const int dy[9]={0,1,1,1,0,-1,-1,-1,0};
 
char ans1[17],a[6][6];
int f[6][6][6],ans2[17],ans3[17],rest[6];
bool done[6][6];
int ans;
void come(int x,int y,char c)
{
    for (int i=0;i<=8;i++)
        f[x+dx[i]][y+dy[i]][c-64]++;
}
void go(int x,int y,char c)
{
    for (int i=0;i<=8;i++)
        f[x+dx[i]][y+dy[i]][c-64]--;
}
void Search(int x,int y,int c,int dep)
{
    ans1[dep]=c; ans2[dep]=x; ans3[dep]=y;
    if (dep==16)
    {
        ans++;
        if (ans==1)
            for (int i=1;i<=16;i++)
                printf("%c %d %d\n",char(ans1[i]+64),ans2[i],ans3[i]);
        return ;
    }
    go(x,y,a[x][y]);
    come(x,y,char(c+64));
    done[x][y]=true;
    for (int k=1;k<=5;k++)
        if (rest[k])
            for (int i=1;i<=4;i++)
                for (int j=1;j<=4;j++)
                    if (f[i][j][k]==0 && !done[i][j])
                    {
                        rest[k]--;
                        Search(i,j,k,dep+1);
                        rest[k]++;
                    }
    come(x,y,a[x][y]);
    go(x,y,char(c+64));
    done[x][y]=false;
}
int main()
{
    freopen("wissqu.in","r",stdin);
    freopen("wissqu.out","w",stdout);
    memset(f,0,sizeof(f));
    for (int i=1;i<=4;i++)
    {
        for (int j=1;j<=4;j++)
        {
            scanf("%c",&a[i][j]);
            come(i,j,a[i][j]);
        }
        getchar();
    }
    memset(done,false,sizeof(done));
    ans=0;
    for (int i=1;i<=5;i++) rest[i]=3;
    for (int i=1;i<=4;i++)
        for (int j=1;j<=4;j++)
            if (f[i][j][4]==0)
                Search(i,j,4,1);
    printf("%d\n",ans);
    return 0;
}/*
	ID:echooat1
	LANG:C++
	TASK:wissqu
	*/
#include <fstream>
#include <cstring>
#define ok(ch) (a[i][j]!=ch&&a[i-1][j]!=ch&&a[i][j-1]!=ch&&a[i+1][j]!=ch&&a[i][j+1]!=ch&&a[i+1][j+1]!=ch&&a[i-1][j-1]!=ch&&a[i+1][j-1]!=ch&&a[i-1][j+1]!=ch)
using namespace std;
char a[5][5];
ifstream fin("wissqu.in");
ofstream fout("wissqu.out");
long ans=0,c[6]={0,3,3,3,4,3};
bool hash[5][5]={0},bo=true;;
string cut[20];
void dfs(long k){
	if(k>=16){
		ans++;
		if(bo){
			for(long i=1;i<=16;i++)fout <<cut[i]<<endl;
			bo=0;
		}
		return;
	}
	for(char u='A';u<='E';u++)
	for(long i=1;i<=4;i++)
		for(long j=1;j<=4;j++)
			if(c[u-'A'+1]>0&&!hash[i][j]&&ok(u)){
				char ch=a[i][j];cut[k+1]+=u;cut[k+1]+=' ';cut[k+1]+=char(i+'0');cut[k+1]+=' ';cut[k+1]+=char(j+'0');
				a[i][j]=u;
				c[u-'A'+1]--;
				hash[i][j]=true;
				dfs(k+1);cut[k+1]="\0";
				hash[i][j]=false;c[u-'A'+1]++;a[i][j]=ch;cut[k+1]="\0";
			}
}
int main(int argc,char** argv){
	for(long i=1;i<=4;i++){
		for(long j=1;j<=4;j++)
			a[i][j]=fin.get();
		fin.get();
	}
	for(long i=1;i<=4;i++)
		for(long j=1;j<=4;j++)
			if(ok('D')){
			c[4]--;
			cut[1]+='D';cut[1]+=' ';cut[1]+=char(i+'0');cut[1]+=' ';cut[1]+=char(j+'0');
			char ch=a[i][j];
			a[i][j]='D';
			hash[i][j]=true;
			dfs(1);c[4]++;cut[1]="\0";
			hash[i][j]=false;
			a[i][j]=ch;
		}
	fout <<ans<<endl;
	fin.close();fout.close();
	return 0;
}