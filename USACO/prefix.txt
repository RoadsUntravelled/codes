/*
ID:ybojan2
LANG:C++
TASK:prefix
*/
 
#include <iostream>
#include <fstream>
#include <string>
 
using namespace std;
 
int main()
{
    ifstream fin("prefix.in");
    ofstream fout("prefix.out");
 
    string str[201],now,ss;
    int len=0,l,sl=0;
    char m[200001];
 
    fin>>now;
    while (now!=".")
    {
          len++;
          str[len]=now;
          fin>>now;
    }
    fin>>ss;
    while (!fin.eof())
    {
          l=ss.size();
          for (int i=sl+1;i<=sl+l;i++)
              m[i]=ss[i-sl-1];
          sl+=l;
          fin>>ss;
    }
    bool dp[200001];
    memset(dp,false,sizeof(dp));
    dp[0]=true;
    for (int i=1;i<=sl;i++)
    {
        for (int j=1;j<=len;j++)
        {
            bool okay=true;
            int ll=str[j].length();
            if (i<ll) continue;
            for (int k=0;k<ll;k++)
                if (str[j][k]!=m[i-ll+1+k]) 
                {
                                            okay=false;
                                            break;
                                            }
            if (okay) dp[i]=(dp[i]||dp[i-ll]);
        }
    }
    for (int i=sl;i>=0;i--)
        if (dp[i]) 
        {
                    fout<<i<<endl;
                    break;
        }
    return 0;
}#include <fstream>
#include<cstring>
using namespace std;
ofstream fout ("prefix.out",ios::out);
ifstream fin ("prefix.in",ios::in);
long len,maxn=0,lent,dl[201];
char pi[201][11];
string core="",temp;
bool f=false;
int main()
{
	for(len=0;;len++)
	{
		fin>>pi[len];
		if(pi[len][0]=='.') break;
		dl[len]=strlen(pi[len]);
	}
	len--;
	while(fin>>temp)
		core+=temp;
	lent=core.length();
	//main
	for(int i=0;i<lent;i++)
	{
		for(int j=0;j<=len;j++)
			if(i+dl[j]>lent) continue; //超界判断
			else
			{
				f=false; 
				for(int k=0;k<dl[j];k++)
					if(core[i+k]!=pi[j][k])  {f=true;break;}
				if (!f) maxn=(dl[j]+i>maxn?dl[j]+i:maxn);  //更新最大值
			}
		if(i+1>maxn) break; //退出条件
	}
	fout<<maxn<<endl;
	return 0;
}/*
	ID:echooat1
	LANG:C++
	TASK:prefix
	*/
#include <fstream>
#include <cstdlib>
#include <cstring>
using namespace std;
string hash[20001];
long len=0;
ifstream fin("prefix.in");
ofstream fout("prefix.out");
bool find(string st){
	for(long i=1;i<=len;i++)
		if(hash[i]==st)return true;
	return false;
}
int main(int argc,char** argv){
	string st,ss;
	fin >>ss;
	bool f[200002]={false};
	while(ss!=".")
		if(ss.length()){
			hash[++len]=ss;
			fin >>ss;
		}
	f[0]=1;
	fin.get();
	getline(fin,ss);
	while(ss!="**"){
		st=st+ss;
		ss="**";
		getline(fin,ss);
	}
	st="8"+st;//很关键的一步，实在受不了c++的string下标从0开始
	for(long i=1;i<=st.length();i++)
		for(long j=1;j<=len;j++)
			if(i>hash[j].length()-1){
			f[i]=f[i-hash[j].length()]&(hash[j]==st.substr(i-hash[j].length()+1,hash[j].length()));
			if(f[i])break;
		}
	for(long p=st.length();p>=1;p--)
		if(f[p]){fout <<p<<endl;	fin.close();fout.close();exit(0);}
	fout <<0<<endl;
		fin.close();fout.close();
	return 0;
}