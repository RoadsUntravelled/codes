/*
ID:ybojan2
LANG:C++
TASK:lgame
*/
#include <fstream>
#include <string>
using namespace std;
 
ifstream cin1("lgame.in");
ifstream cin2("lgame.dict");
ofstream cout("lgame.out");
int main()
{
    string str,dat[40001];
    int maxr=0,num[26],temp[26],tt=0,sc[26]={2,5,4,4,1,6,5,5,1,7,6,3,5,2,3,5,7,2,1,2,4,6,6,7,5,7};
    memset(num,0,sizeof(num));
    cin1>>str;
    for (int i=0;i<str.length();i++) num[str[i]-'a']++;
    cin2>>str;
    while (str!=".")
    {
          bool okay=true;
          memset(temp,0,sizeof(temp));
          for (int i=0;i<str.length();i++) temp[str[i]-'a']++;
          for (int i=0;i<26;i++) if (temp[i]>num[i]){
              okay=false;break;
          }
          if (okay) dat[++tt]=str;
          cin2>>str;
    }
    dat[++tt]="";
    for (int i=1;i<tt;i++)
        for (int j=i+1;j<=tt;j++)
        {
            memset(temp,0,sizeof(temp));
            for (int k=0;k<dat[i].length();k++)
                temp[dat[i][k]-'a']++;
            for (int k=0;k<dat[j].length();k++)
                temp[dat[j][k]-'a']++;
            bool okay=true;
            int sum=0;
            for (int k=0;k<26;k++)
                if (temp[k]>num[k]){
                                    okay=false;
                                    break;
                                    }
            if (!okay) continue;
            for (int k=0;k<26;k++)
                sum+=sc[k]*temp[k];
            if (sum>maxr) maxr=sum;
        }
    cout<<maxr<<endl;
    for (int i=1;i<tt;i++)
        for (int j=i+1;j<=tt;j++)
        {
            memset(temp,0,sizeof(temp));
            for (int k=0;k<dat[i].length();k++)
                temp[dat[i][k]-'a']++;
            for (int k=0;k<dat[j].length();k++)
                temp[dat[j][k]-'a']++;
            bool okay=true;
            int sum=0;
            for (int k=0;k<26;k++)
                if (temp[k]>num[k]){
                                    okay=false;
                                    break;
                                    }
            if (!okay) continue;
            for (int k=0;k<26;k++)
                sum+=sc[k]*temp[k];
            if (sum==maxr) {
                           cout<<dat[i];
                           if (dat[j]!="") cout<<" "<<dat[j];
                           cout<<endl;
                           }
        }    
    return 0;
}/*
ID: cmykrgb1
PROG: lgame
LANG: C++
*/
//written by CmYkRgB123
#include <iostream>
#include <fstream>
using namespace std;
ifstream fi("lgame.in");
ifstream fd("lgame.dict");
ofstream fo("lgame.out");
 
typedef struct
{
	char c[7];
	int len;
	int score;
}str;
 
typedef struct
{
	char c1[7],c2[7];
	int len1,len2;
}Tans;
 
int uw['z'+1],used['z'+1];
int v['z'+1];
str S[40001];
Tans ans[50];
int N=1,L,acnt;
int Ms=0;
 
void init()
{
	int i;
	char c;
	bool k;
	while (!fi.eof())
	{
		c=fi.get();
		uw[c]++;
	}
	while (c!='.')
	{
		memset(used,0,sizeof(used));
		L++;
		c=fd.get();
		if (c=='.')
			break;
		k=true;
		while (c==10 || c==13)	c=fd.get();
		S[N].len=0;
		while (c!=10 && c!=13)
		{
			S[N].c[ S[N].len++ ]=c;
			used[c]++;
			if (!uw[c])
				k=false;
			c=fd.get();
		}
		S[N].c[ S[N].len ]=0;
		for (i='a';i<='z';i++)
			if (used[i]>uw[i])
			{
				k=false;
				break;
			}
		if (k)
			N++;
	}
	N--;
	v['q']=v['j']=v['z']=v['x']=7;
	v['w']=v['f']=v['k']=v['v']=6;
	v['y']=v['p']=v['g']=v['h']=v['b']=v['m']=5;
	v['u']=v['d']=v['c']=4;
	v['o']=v['l']=3;
	v['r']=v['t']=v['a']=v['n']=2;
	v['e']=v['i']=v['s']=1;
}
 
void findans()
{
	int i,k,p;
	for (i=1;i<=N;i++)
	{
		for (k=0;k<=S[i].len-1;k++)
			S[i].score+=v[ S[i].c[k] ];
 
		if (S[i].score>Ms)
		{
			Ms=S[i].score;
			acnt=1;
			for (p=0;p<=S[i].len-1;p++)
				ans[acnt].c1[p]=S[i].c[p];
			ans[acnt].len1=S[i].len;
			ans[acnt].c1[ ans[acnt].len1 ]=0;
		}
		else if (S[i].score==Ms)
		{
			acnt++;
			for (p=0;p<=S[i].len-1;p++)
				ans[acnt].c1[p]=S[i].c[p];
			ans[acnt].len1=S[i].len;
			ans[acnt].c1[ ans[acnt].len1 ]=0;
		}
	}
}
 
void findpair()
{
	memset(used,0,sizeof(used));
	int i,j,p;
	bool K;
	int T;
	for (i=1;i<=N-1;i++)
	{
		for (j=i+1;j<=N;j++)
		{
			T=S[i].score+S[j].score;
			for (p=0;p<=S[i].len-1;p++)
				used[S[i].c[p]]++;
			for (p=0;p<=S[j].len-1;p++)
				used[S[j].c[p]]++;
			K=true;
			for (p='a';p<='z';p++)
				if (used[p]>uw[p])
				{
					K=false;
					break;
				}
			memset(used,0,sizeof(used));
			if (!K) continue;
			if (T>Ms)
			{
				Ms=T;
				acnt=1;
				for (p=0;p<=S[i].len-1;p++)
					ans[acnt].c1[p]=S[i].c[p];
				ans[acnt].len1=S[i].len;
				ans[acnt].c1[ ans[acnt].len1 ]=0;
				for (p=0;p<=S[j].len-1;p++)
					ans[acnt].c2[p]=S[j].c[p];
				ans[acnt].len2=S[j].len;
				ans[acnt].c2[ ans[acnt].len2 ]=0;
			}
			else if (T==Ms)
			{
				acnt++;
				for (p=0;p<=S[i].len-1;p++)
					ans[acnt].c1[p]=S[i].c[p];
				ans[acnt].len1=S[i].len;
				ans[acnt].c1[ ans[acnt].len1 ]=0;
				for (p=0;p<=S[j].len-1;p++)
					ans[acnt].c2[p]=S[j].c[p];
				ans[acnt].len2=S[j].len;
				ans[acnt].c2[ ans[acnt].len2 ]=0;
			}
		}
	}
}
 
 
void print()
{
	fo << Ms << endl;
	int i,j;
	for (i=1;i<=acnt;i++)
	{
		for (j=0;j<=ans[i].len1-1;j++)
			fo << ans[i].c1[j];
		if (ans[i].len2)
		{
			fo << ' ';
			for (j=0;j<=ans[i].len2-1;j++)
				fo << ans[i].c2[j];
		}
		fo <<endl;
	}
}
 
inline int cmp(const void *a,const void *b)
{
	int k;
	Tans *A=(Tans *)a,*B=(Tans *)b;
	k=strcmp(A->c1,B->c1);
	if (k!=0) return k;
	k=strcmp(A->c2,B->c2);
	return k;
}
 
void sortans()
{
	qsort(ans+1,acnt,sizeof(Tans),cmp);
	print();
}
 
int main()
{
	init();
	findans();
	findpair();
	sortans();
	fi.close();
	fd.close();
	fo.close();
	return 0;
}貌似好理解一点的枚举
/*
ID:lqp18_31
PROG:lgame
LANG:C++
*/
#include<stdio.h>
#include<string.h>
#include<stdlib.h>
FILE *fin=fopen("lgame.in","r");
FILE *fout=fopen("lgame.out","w");
char word[40002][8],final[8];
int N,in[28],value[40002]={0};
int ans[10000][2],num,max=0;
const int v[28]={2,5,4,4,1,6,5,5,1,7,6,3,5,2,3,5,7,2,1,2,4,6,6,7,5,7};
 
void init()
{
     int in2[28];
     fscanf(fin,"%s",final);
     fclose(fin);
     for(int i=0;i<strlen(final);i++)
       in[final[i]-'a']++;
     fin=fopen("lgame.dict","r");
     while(1){
       memset(in2,0,sizeof(in2));
       fscanf(fin,"%s",word[++N]);
       if(strcmp(word[N],".")==0) break;
       int tmp=0;
       bool ok=1;
       for(int i=0;i<strlen(word[N]);i++)
       {
               in2[word[N][i]-'a']++;
               tmp+=v[word[N][i]-'a'];
               if(in2[word[N][i]-'a']>in[word[N][i]-'a'])
               {
                     ok=0;
                     N--;
                     break;
               }
       }
       if(ok)
       value[N]=tmp;
     }
     N--;
}
 
void getre(int n1,int n2)
{
     if(value[n1]+value[n2]<max) return;
     if(value[n1]+value[n2]>max)
         num=0;
     num++;
     max=value[n1]+value[n2];
     ans[num][0]=n1;
     ans[num][1]=n2;
}
 
bool check(int n,int *in3)
{
     for(int i=0;i<strlen(word[n]);i++)
     {
       in3[word[n][i]-'a']--;
       if(in3[word[n][i]-'a']<0) return 0;
     }
     return 1;
}
 
void work()
{
     int in2[28];
     for(int i=1;i<=N;i++)
     {
       int v=0;
       memcpy(in2,in,sizeof(in));
       for(int j=0;j<strlen(word[i]);j++)
         in2[word[i][j]-'a']--;
       getre(i,0);
       int in3[28];
       for(int j=i;j<=N;j++)
       {
               memcpy(in3,in2,sizeof(in3));
               if(!check(j,in3)) continue;
               getre(i,j);
       }
     }
     fprintf(fout,"%d\n",max);
     for(int i=1;i<=num;i++)
     {
             fprintf(fout,"%s",word[ans[i][0]]);
             if(ans[i][1])
               fprintf(fout," %s",word[ans[i][1]]);
             fprintf(fout,"\n");
     }
}
 
int main()
{
    init();
    work();
    return 0;
}还是面向对象清楚
/*
ID:continu2
LANG:C++
PROB:lgame
*/
#include <fstream>
#include <string.h>
#include <iostream>
using namespace std;
const int v[27]={0,2,5,4,4,1,6,5,5,1,7,6,3,5,2,3,5,7,2,1,2,4,6,6,7,5,7};
string dict[40001];
string ans[40001];
string a;
int n=0;
int ans_n=0;
int score[40001];
string dict2[40001];
int score2[40001];
int n2=0;
int a_time[27];
int maxium=0;
class PREWORK
{
	public:
	void read_stdin()
	{
		ifstream fin("lgame.in");
		fin>>a;
		for(int i=0;i<a.length();i++)
		{
			a_time[a[i]-96]++;
		}
		fin.close();
	}
	void read_dictin()
	{
		ifstream fin("lgame.dict");
		string temp;
		int time[27];
		while(getline(fin,temp)&&temp!=".")
		{
			memset(time,0,sizeof(time));
			for(int i=0;i<temp.length();i++)
				time[temp[i]-96]++;
			bool can=true;
			for(int i=1;i<=26;i++)
			{
				if(time[i]>a_time[i])
				{
					can=false;
					break;
				}
			}
			if(can)
			{
				n++;
				dict[n]=temp;
			}
		}
		fin.close();
	}
	void qsort(int l,int r)
	{
		if(l<r)
		{
			int i=l,j=r;
			string mid=dict[(l+r)/2];
			while(i<=j)
			{
				while(dict[i].length()>mid.length()) i++;
				while(dict[j].length()<mid.length()) j--;
				if(i<=j)
				{
					string temp=dict[i];
					dict[i]=dict[j];
					dict[j]=temp;
					i++,j--;
				}
			}
			if(l<j) qsort(l,j);
			if(i<r) qsort(i,r);
		}
	}
	int getscore(int i)
	{
		int sum=0;
		for(int j=0;j<dict[i].length();j++)
			sum+=v[dict[i][j]-96];
		return sum;
	}
	void work()
	{
		read_stdin();
		read_dictin();
		qsort(1,n);
		for(int i=1;i<=n;i++)
			score[i]=getscore(i);
	}
}pre_work;
/****************************************************************************/
class ANSWER
{
	public:
	void make()
	{
		for(int i=1;i<=n;i++)
		{
			for(int j=i+1;j<=n;j++)
			{
				int time[27];
				memset(time,0,sizeof(time));
				for(int k=0;k<dict[i].length();k++)
					time[dict[i][k]-96]++;
				for(int k=0;k<dict[j].length();k++)
					time[dict[j][k]-96]++;
				bool can=true;
				for(int k=1;k<=26;k++)
				{
					if(time[k]>a_time[k]) 
					{
						can=false;
						break;
					}
				}
				if(can)
				{
					n2++;
					if(dict[i]>dict[j])
						dict2[n2]=dict[j]+" "+dict[i];
					else
						dict2[n2]=dict[i]+" "+dict[j];
				}
			}
		}
	}
	int getscore(int i)
	{
		int sum=0;
		for(int j=0;j<dict2[i].length();j++)
		{
			if(dict2[i][j]==' ') continue;
			sum+=v[dict2[i][j]-96];
		}
		return sum;
	}
	void work()
	{
		make();
		for(int i=1;i<=n2;i++)
		{
			score2[i]=getscore(i);
		}
	}
}answer;
class Finish
{
	public:
	void find_the_maxium()
	{
		for(int i=1;i<=n;i++)
			if(score[i]>maxium)
				maxium=score[i];
		for(int i=1;i<=n2;i++)
			if(score2[i]>maxium)
				maxium=score2[i];
	}
	void to_get_ans()
	{
		for(int i=1;i<=n;i++)
		{
			if(score[i]==maxium)
			{
				ans_n++;
				ans[ans_n]=dict[i];
			}
		}
		for(int i=1;i<=n2;i++)
		{
			if(score2[i]==maxium)
			{
				ans_n++;
				ans[ans_n]=dict2[i];
			}
		}
	}
	void qsort(int l,int r)
	{
		if(l<r)
		{
			int i=l,j=r;
			string mid=ans[(l+r)/2];
			while(i<=j)
			{
				while(ans[i]<mid) i++;
				while(ans[j]>mid) j--;
				if(i<=j)
				{
					string temp=ans[i];
					ans[i]=ans[j];
					ans[j]=temp;
					i++,j--;
				}
			}
			if(l<j) qsort(l,j);
			if(i<r) qsort(i,r);
		}
	}
	void work()
	{
		ofstream fout("lgame.out");
		find_the_maxium();
		to_get_ans();
		qsort(1,ans_n);
		fout<<maxium<<endl;
		for(int i=1;i<=ans_n;i++)
		{
			if(ans[i]!=ans[i+1])
				fout<<ans[i]<<endl;;
		}
	}
}finish;
main()
{
	pre_work.work();
	answer.work();
	finish.work();
	return 0;
}/*
ID:dingyag1
LANG:C++
TASK:lgame
*/
 
#include <stdio.h>
#include <iostream>
#include <string>
#include <fstream>
#include <vector>
using namespace std;
 
int value[26]=
{
	2,5,4,4,1,6,5,5,1,7,6,3,5,2,3,5,7,2,1,2,4,6,6,7,5,7
};
 
int stdd[26],dic[10000][26],dic_value[10000];
int dic_len=0,max_one=0;
int R_one[100],R_one_len;
 
 
bool can2(int i)
{
	int k;
	for (k=0;k<26;++k)
	{
		if (dic[i][k]>stdd[k])
		{
			return false;
		}
	}
	return true;
}
 
 
bool can(const string &b)
{
	int i,tmp[26]={0},val=0;
	for (i=0;i<b.size();++i)
	{
		tmp[b[i]-'a']+=1;
	}
	for (i=0;i<26;++i)
	{
		if(tmp[i]>stdd[i]) return false;
	}
	//计算 单词的信息
	for (i=0;i<26;++i)
	{
		dic[dic_len][i]=tmp[i];
		val+=value[i]*tmp[i];
	}
 
	dic_value[dic_len++]=val;
	if (val>max_one)
	{
		max_one=val;
		R_one[0]=dic_len-1;
		R_one_len=1;
	}else if (val==max_one)
	{
		R_one[R_one_len]=dic_len-1;
		R_one_len++;
	}
	return true;
}
 
int main()
{
	freopen("lgame.in","r",stdin);
	freopen("lgame.out","w",stdout);
	string s,sb;
	ifstream ifs;
	vector<string> dic_s;
	int R[200][2];
	int R_len=0;
	int i,k,j,max=0;
	cin>>s;
	for (i=0;i<s.size();++i)
	{
		stdd[s[i]-'a']+=1;
	}
 
	ifs.open("lgame.dict");
 
 
	while (ifs>>sb)
	{
		if (sb==".")
		{
			break;
		}
		if (can(sb)) dic_s.push_back(sb);
	}
	ifs.close();
 
	//2个单词寻找
	for (i=0;i<dic_len;++i)
	{
		for (j=0;j<26;++j)
		{
			stdd[j]-=dic[i][j];
		}
		for (j=i;j<dic_len;++j)
		{
			if (can2(j))
			{
				int t=dic_value[i]+dic_value[j];
				if (t>max)
				{
					max=t;
					R_len=1;
					R[0][0]=i;R[0][1]=j;
				}
				else if (t==max)
				{
					R[R_len][0]=i;R[R_len][1]=j;
					R_len++;
				}
			}
		}
		for (j=0;j<26;++j)
		{
			stdd[j]+=dic[i][j];
		}
	}
 
	if (max<max_one)
	{
		cout<<max_one<<endl;
		for (i=0;i<R_one_len;++i)
		{
			cout<<dic_s[R_one[i]]<<endl;
		}
	}else
	if (max==max_one)
	{
			cout<<max_one<<endl;
			for (i=0;i<R_len;++i)
			{
				cout<<dic_s[R[i][0]]<<" "<<dic_s[R[i][1]]<<endl;
			}
			for (i=0;i<R_one_len;++i)
			{
				cout<<dic_s[R_one[i]]<<endl;
			}
	}else
	{
		cout<<max<<endl;
		for (i=0;i<R_len;++i)
		{
			cout<<dic_s[R[i][0]]<<" "<<dic_s[R[i][1]]<<endl;
		}
	}
 
	return 0;
}/*
	ID:echooat1
	LANG:C++
	TASK:lgame
	*/
#include <fstream>
#include <cstdio>
#include <cstring>
#define len 40000
using namespace std;
ifstream fin("lgame.in");ofstream fout("lgame.out");
FILE* inp;
long s[26]={2,5,4,4,1,6,5,5,1,7,6,3,5,2,3,5,7,2,1,2,4,6,6,7,5,7};
long hash[26]={0};
int comp(const void* a,const void* b){
	return *(string*)a>*(string*)b?1:-1;
}
int main(int argc,char** argv){
	inp=fopen("lgame.dict","r");
	string a[len];long l=-1;
	string st;
	fin >>st;
	for(size_t i=0;i<st.length();i++){hash[st[i]-'a']++;}
	string ss;char ch[10];
	fscanf(inp,"%s",ch);ss=ch;
	while(ss!="."){
		bool bo=false;
		for(size_t i=0;i<ss.length();i++)
			if(!hash[ss[i]-'a']){bo=true;break;}
		if(!bo)a[++l]=ss;
		fscanf(inp,"%s",ch);ss=ch;
	}
	qsort(a,l,sizeof a[l+1],comp);
	long c[len]={0};
	for(long i=0;i<=l;i++){
		long temp=0;
		for(size_t j=0;j<a[i].length();j++)
			temp+=s[a[i][j]-'a'];
		c[i]=temp;
	}
	long uni[26]={0};
	string ans[len];long p=0,kk[len]={0};long max=0;
	for(long i=0;i<=l;i++)
		for(long j=i;j<=l+1;j++){
				memset(uni,0,sizeof uni);
				long yy=0;
				for(long l1=0;l1<a[i].length();l1++){uni[a[i][l1]-'a']++;yy+=s[a[i][l1]-'a'];}
				for(long l1=0;l1<a[j].length();l1++){uni[a[j][l1]-'a']++;yy+=s[a[j][l1]-'a'];}
				bool bo=false;
				for(long k=0;k<26;k++)
					if(uni[k]>hash[k]){bo=true;break;}
				if(!bo){
					ans[++p]=a[i];
					if(a[j].length())ans[p]=a[i]+" "+a[j];
					kk[p]=yy;if(yy>max)max=yy;
					}
				}
	fout <<max<<endl;
	for(long i=1;i<=p;i++)
		if(kk[i]==max)
			fout <<ans[i]<<endl;
	fin.close();fout.close();fclose(inp);
	return 0;
}